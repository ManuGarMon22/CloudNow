{"ast":null,"code":"var _jsxFileName = \"A:\\\\Manu\\\\Documents\\\\Bootcamp SoyHenry\\\\M2\\\\FT-M2-master\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards.jsx\";\nimport Nav from \"./components/Nav.jsx\";\nimport Details from \"./components/Details.jsx\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    if (ciudad === \"\") {\n      alert(\"Por favor ingrese una ciudad en la barra de busqueda\");\n    } else {\n      let apiKey = \"bd1c01c112a39203cf62907f6423a754\";\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad} &appid=${apiKey}&units=metric`).then(r => r.json()).then(data => {\n        const ciudadEjemplo = {\n          min: data.main.temp_min,\n          max: data.main.temp_max,\n          img: data.weather[0].icon,\n          id: data.id,\n          wind: data.wind.speed,\n          temp: data.main.temp,\n          name: data.name,\n          weather: data.weather[0].main,\n          clouds: data.clouds.all,\n          latitud: data.coord.lat,\n          longitud: data.coord.lon\n        };\n        console.log(ciudadEjemplo.img);\n\n        if (!cities.find(x => x.name === ciudadEjemplo.name)) {\n          setCities(oldCities => [...oldCities, ciudadEjemplo]);\n        }\n      }).catch(error => alert(\"Error con la api: \" + error));\n    }\n  }\n\n  function onClose(id) {\n    setCities(r => r.filter(c => c.id !== id));\n  }\n\n  function findCity(idCity) {\n    let city = cities.filter(y => y.id === idCity);\n    return city[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          cities: cities,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ciudad/:id\",\n        render: _ref => {\n          let {\n            match\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Details, {\n            city: findCity(match)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 54\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cards","Nav","Details","Route","Switch","App","cities","setCities","onSearch","ciudad","alert","apiKey","fetch","then","r","json","data","ciudadEjemplo","min","main","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","console","log","find","x","oldCities","catch","error","onClose","filter","c","findCity","idCity","city","y","match"],"sources":["A:/Manu/Documents/Bootcamp SoyHenry/M2/FT-M2-master/08-React-Estado-LifeCycle/homework/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards.jsx\";\nimport Nav from \"./components/Nav.jsx\";\nimport Details from \"./components/Details.jsx\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport default function App() {\n  var [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    if (ciudad === \"\") {\n      alert(\"Por favor ingrese una ciudad en la barra de busqueda\");\n    } else {\n      let apiKey = \"bd1c01c112a39203cf62907f6423a754\";\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${ciudad} &appid=${apiKey}&units=metric`\n      )\n        .then((r) => r.json())\n        .then((data) => {\n          const ciudadEjemplo = {\n            min: data.main.temp_min,\n            max: data.main.temp_max,\n            img: data.weather[0].icon,\n            id: data.id,\n            wind: data.wind.speed,\n            temp: data.main.temp,\n            name: data.name,\n            weather: data.weather[0].main,\n            clouds: data.clouds.all,\n            latitud: data.coord.lat,\n            longitud: data.coord.lon,\n          };\n          console.log(ciudadEjemplo.img);\n          if (!cities.find((x) => x.name === ciudadEjemplo.name)) {\n            setCities((oldCities) => [...oldCities, ciudadEjemplo]);\n          }\n        })\n        .catch((error) => alert(\"Error con la api: \" + error));\n    }\n  }\n\n  function onClose(id) {\n    setCities((r) => r.filter((c) => c.id !== id));\n  }\n\n  function findCity(idCity){\n    let city = cities.filter((y)=>y.id===idCity);\n    return city[0];\n  }\n\n  return (\n    <div className=\"App\">\n      {/* Tu código acá: */}\n      <Nav onSearch={onSearch} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Cards cities={cities} onClose={onClose} />\n        </Route>\n        <Route path=\"/about\">\n          <Cards onClose={onClose} />\n        </Route>\n        {/*Aqui flata el route para la especificaciones de las ciudades*/}\n        <Route path=\"/ciudad/:id\" render={({match})=><Details city = {findCity(match)}/>}>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}