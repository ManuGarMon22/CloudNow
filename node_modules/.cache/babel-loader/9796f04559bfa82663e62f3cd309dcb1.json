{"ast":null,"code":"var _jsxFileName = \"A:\\\\Manu\\\\Documents\\\\Bootcamp SoyHenry\\\\M2\\\\FT-M2-master\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards.jsx\";\nimport Nav from \"./components/Nav.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    let apiKey = \"bd1c01c112a39203cf62907f6423a754\";\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad} &appid=${apiKey}`) //fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n    .then(r => r.json()).then(data => {\n      if (data !== \"undefined\") {\n        const ciudadEjemplo = {\n          min: data.main.temp_min,\n          max: data.main.temp_max,\n          img: data.weather[0].icon,\n          id: data.id,\n          wind: data.wind.speed,\n          temp: data.main.temp,\n          name: data.name,\n          weather: data.weather[0].main,\n          clouds: data.clouds.all,\n          latitud: data.coord.lat,\n          longitud: data.coord.lon\n        };\n        console.log();\n\n        if (!cities.find(x => x.name === ciudadEjemplo.name)) {\n          setCities(oldCities => [...oldCities, ciudadEjemplo]);\n        }\n      } else {\n        alert(\"ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(r => r.filter(c => c.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cards","Nav","App","cities","setCities","onSearch","ciudad","apiKey","fetch","then","r","json","data","ciudadEjemplo","min","main","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","console","log","find","x","oldCities","alert","onClose","filter","c"],"sources":["A:/Manu/Documents/Bootcamp SoyHenry/M2/FT-M2-master/08-React-Estado-LifeCycle/homework/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards.jsx\";\nimport Nav from \"./components/Nav.jsx\";\n\nexport default function App() {\n  var [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    let apiKey = \"bd1c01c112a39203cf62907f6423a754\";\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${ciudad} &appid=${apiKey}`\n    )\n      //fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n      .then((r) => r.json())\n      .then((data) => {\n        if (data !== \"undefined\") {\n          const ciudadEjemplo = {\n            min: data.main.temp_min,\n            max: data.main.temp_max,\n            img: data.weather[0].icon,\n            id: data.id,\n            wind: data.wind.speed,\n            temp: data.main.temp,\n            name: data.name,\n            weather: data.weather[0].main,\n            clouds: data.clouds.all,\n            latitud: data.coord.lat,\n            longitud: data.coord.lon,\n          };\n          console.log()\n          if (!cities.find((x) => x.name === ciudadEjemplo.name)) {\n            setCities((oldCities) => [...oldCities, ciudadEjemplo]);\n          }\n        } else {\n          alert(\"ciudad no encontrada\");\n        }\n      });\n  }\n\n  function onClose(id) {\n    setCities((r) => r.filter((c) => c.id !== id));\n  }\n  return (\n    <div className=\"App\">\n      {/* Tu código acá: */}\n      <Nav onSearch={onSearch} />\n      <Cards cities={cities} onClose={onClose} />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAAlC;;EAEA,SAASM,QAAT,CAAkBC,MAAlB,EAA0B;IACxB,IAAIC,MAAM,GAAG,kCAAb;IACAC,KAAK,CACF,qDAAoDF,MAAO,WAAUC,MAAO,EAD1E,CAAL,CAGE;IAHF,CAIGE,IAJH,CAISC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAJf,EAKGF,IALH,CAKSG,IAAD,IAAU;MACd,IAAIA,IAAI,KAAK,WAAb,EAA0B;QACxB,MAAMC,aAAa,GAAG;UACpBC,GAAG,EAAEF,IAAI,CAACG,IAAL,CAAUC,QADK;UAEpBC,GAAG,EAAEL,IAAI,CAACG,IAAL,CAAUG,QAFK;UAGpBC,GAAG,EAAEP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,IAHD;UAIpBC,EAAE,EAAEV,IAAI,CAACU,EAJW;UAKpBC,IAAI,EAAEX,IAAI,CAACW,IAAL,CAAUC,KALI;UAMpBC,IAAI,EAAEb,IAAI,CAACG,IAAL,CAAUU,IANI;UAOpBC,IAAI,EAAEd,IAAI,CAACc,IAPS;UAQpBN,OAAO,EAAER,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBL,IARL;UASpBY,MAAM,EAAEf,IAAI,CAACe,MAAL,CAAYC,GATA;UAUpBC,OAAO,EAAEjB,IAAI,CAACkB,KAAL,CAAWC,GAVA;UAWpBC,QAAQ,EAAEpB,IAAI,CAACkB,KAAL,CAAWG;QAXD,CAAtB;QAaAC,OAAO,CAACC,GAAR;;QACA,IAAI,CAAChC,MAAM,CAACiC,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACX,IAAF,KAAWb,aAAa,CAACa,IAA5C,CAAL,EAAwD;UACtDtB,SAAS,CAAEkC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAezB,aAAf,CAAhB,CAAT;QACD;MACF,CAlBD,MAkBO;QACL0B,KAAK,CAAC,sBAAD,CAAL;MACD;IACF,CA3BH;EA4BD;;EAED,SAASC,OAAT,CAAiBlB,EAAjB,EAAqB;IACnBlB,SAAS,CAAEM,CAAD,IAAOA,CAAC,CAAC+B,MAAF,CAAUC,CAAD,IAAOA,CAAC,CAACpB,EAAF,KAASA,EAAzB,CAAR,CAAT;EACD;;EACD,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEE,QAAC,GAAD;MAAK,QAAQ,EAAEjB;IAAf;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,MAAM,EAAEF,MAAf;MAAuB,OAAO,EAAEqC;IAAhC;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA7CuBtC,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}